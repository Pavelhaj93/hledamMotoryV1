// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  email          String    @unique
  emailVerified  DateTime?
  hashedPassword String?
  createdAt      DateTime? @default(now())
  updatedAt      DateTime? @updatedAt
  Account        Account[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Motor {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  markName    String
  name        String
  description String?
  image       String?
  price       Float?
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @updatedAt

  mark Mark @relation(fields: [markName], references: [name], onDelete: Cascade)
}

model OldMotor {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  markName    String
  name        String
  description String?
  image       String?
  price       Float?
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @updatedAt

  mark Mark @relation(fields: [markName], references: [name], onDelete: Cascade)
}

model Mark {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  name      String     @unique
  createdAt DateTime?  @default(now())
  updatedAt DateTime?  @updatedAt
  Motor     Motor[]
  OldMotor  OldMotor[]
  Model     Model[]
}

model Model {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  markName  String
  name      String    @unique
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  mark      Mark      @relation(fields: [markName], references: [name], onDelete: Cascade)

  EngineType EngineType[]
}

model EngineType {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  modelName String
  name      String    @unique
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  model     Model     @relation(fields: [modelName], references: [name], onDelete: Cascade)
}
